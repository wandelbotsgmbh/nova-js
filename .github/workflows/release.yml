# semantic-release action
# Derived from https://semantic-release.gitbook.io/semantic-release/recipes/ci-configurations/github-actions

name: release

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

# Note that this release.yml specifically has permission to publish to npm
# given by the "trusted publishers" system; an action with a different
# filename won't work without reconfiguration on the npm side
# https://docs.npmjs.com/trusted-publishers

permissions:
  contents: write # to be able to publish a GitHub release
  issues: write # to be able to comment on released issues
  pull-requests: write # to be able to comment on released pull requests
  id-token: write # to enable use of OIDC for npm provenance

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Install pnpm
        uses: pnpm/action-setup@v4
      - name: Install dependencies
        run: pnpm install
      - name: Check for issues in dependencies
        run: pnpm audit --audit-level high
      - name: Build
        run: pnpm run build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/

  build-and-release:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Install Node.js
        uses: actions/setup-node@v6
        with:
          node-version: 24 # Need a recent npm version for npm trusted publishers
      - name: Download build artifacts
        uses: actions/download-artifact@v5
        with:
          name: build-artifacts
          path: dist/
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Run semantic-release
          npx semantic-release

  publish-snapshot:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name == 'pull_request' && github.actor != 'dependabot[bot]' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Download build artifacts
        uses: actions/download-artifact@v5
        with:
          name: build-artifacts
          path: dist/
      - name: Fetch latest release version
        id: fetch_latest_release
        run: |
          LATEST_VERSION=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r .tag_name)
          echo "LATEST_VERSION=$LATEST_VERSION" >> $GITHUB_ENV
      - name: Update package.json version
        env:
          LATEST_VERSION: ${{ env.LATEST_VERSION }}
        run: |
          # Extract the pull request number
          PR_NUMBER=$(echo $GITHUB_REF | sed 's/refs\/pull\/\([0-9]*\)\/.*/\1/')
          # Extract the branch name
          BRANCH_NAME=$(echo $GITHUB_HEAD_REF | sed 's/[/_]/-/g')
          # Get the short commit SHA
          COMMIT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
          # Create a snapshot version with branch name, PR number, and commit SHA
          SNAPSHOT_VERSION="${LATEST_VERSION}-pr.${BRANCH_NAME}.${PR_NUMBER}.${COMMIT_SHA}"
          # Update the package.json with the new version
          jq --arg version "$SNAPSHOT_VERSION" '.version = $version' package.json > package.tmp.json && mv package.tmp.json package.json
      - name: Install Node.js
        uses: actions/setup-node@v6
        with: 
          node-version: 24 # Need a recent Node.js for npm trusted publishers
      - name: Publish snapshot to npm
        run: |
          # Publish the snapshot version
          npm publish --tag snapshot
